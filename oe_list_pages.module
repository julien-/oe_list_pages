<?php

/**
 * @file
 * The OpenEuropa List Pages module.
 */

declare(strict_types = 1);

use Drupal\Core\Form\FormStateInterface;
use Drupal\oe_list_pages\SkosConceptHierarchicalHandler;
use Drupal\oe_list_pages\TaxonomyTermHierarchicalHandler;

/**
 * Implements hook_facets_search_api_query_type_mapping_alter().
 */
function oe_list_pages_facets_search_api_query_type_mapping_alter($backend_plugin_id, array &$query_types) {
  // We need to define a new query type to be used by full text list facets,
  // which will apply query logic required for text search.
  $query_types['fulltext_comparison'] = 'fulltext_query_type';
  $query_types['date_comparison'] = 'date_query_type';
  $query_types['oe_list_pages_date_status_comparison'] = 'oe_list_pages_date_status_query_type';
  $query_types['oe_list_pages_hierarchy_comparison'] = 'oe_list_pages_hierarchy_query_type';
}

/**
 * Implements hook_theme().
 */
function oe_list_pages_theme($existing, $type, $theme, $path) {
  return [
    'oe_list_pages_selected_facet' => [
      'variables' => [
        'items' => [],
        'label' => NULL,
      ],
    ],
    'oe_list_pages_rss' => [
      'variables' => [
        'title' => '',
        'link' => '',
        'atom_link' => '',
        'channel_description' => '',
        'language' => '',
        'copyright' => '',
        'image' => [],
        'channel_elements' => [],
        'items' => [],
      ],
    ],
    'oe_list_pages_rss_item' => [
      'variables' => [
        'title' => '',
        'link' => '',
        'guid' => '',
        'item_description' => '',
        'item_elements' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_locale_translation_projects_alter().
 */
function oe_list_pages_locale_translation_projects_alter(&$projects) {
  $projects['oe_list_pages']['info']['interface translation server pattern'] = \Drupal::service('extension.list.module')->getPath('oe_list_pages') . '/translations/%project-%language.po';
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function oe_list_pages_form_search_api_index_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  // We need to restrict by form ID here because this function is also called
  // via hook_form_BASE_FORM_ID_alter (which is wrong, e.g. in the case of the
  // form ID search_api_field_config).
  if (!in_array($form_id, [
    'search_api_index_form',
    'search_api_index_edit_form',
  ])) {
    return;
  }
  /** @var \Drupal\search_api\IndexInterface $index */
  $index = $form_state->getFormObject()->getEntity();
  $form['third_party_settings']['oe_list_pages'] = [
    '#tree' => TRUE,
    '#type' => 'details',
    '#title' => t('OpenEuropa List Pages specific index options'),
    '#collapsed' => TRUE,
  ];
  $form['third_party_settings']['oe_list_pages']['lists_pages_index'] = [
    '#type' => 'checkbox',
    '#title' => t('List pages index'),
    '#description' => t('Marks the index to be used for list pages. Please note that only one index should be used for this purpose that contain a given entity_type/bundle combination.'),
    '#default_value' => $index->getThirdPartySetting('oe_list_pages', 'lists_pages_index', FALSE),
  ];
}

/**
 * Implements template_preprocess_search_api_index().
 */
function oe_list_pages_preprocess_search_api_index(array &$variables) {
  /** @var \Drupal\search_api\IndexInterface $index */
  $index = $variables['index'];
  $variables['table']['#rows'][] = [
    'data' => [
      [
        'header' => TRUE,
        'data' => t('List pages index'),
      ],
      $index->getThirdPartySetting('oe_list_pages', 'lists_pages_index', FALSE) ? t('Yes') : t('No'),
    ],
    'class' => ['list-pages-index'],
  ];
}

/**
 * Implements hook_entity_type_build().
 */
function oe_list_pages_entity_type_build(array &$entity_types) {
  if (isset($entity_types['taxonomy_term'])) {
    $entity_types['taxonomy_term']->setHandlerClass('oe_list_pages_hierarchy', TaxonomyTermHierarchicalHandler::class);
  }
  if (isset($entity_types['skos_concept'])) {
    $entity_types['skos_concept']->setHandlerClass('oe_list_pages_hierarchy', SkosConceptHierarchicalHandler::class);
  }
}
